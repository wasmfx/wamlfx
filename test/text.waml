;; Literals

val empty = ""
val foo = "foo"
val barb = "barb"


;; Length

(; TODO
assert #empty == 0
assert #foo == 3
assert #barb == 4
;)

;; Indexing

(; TODO
assert foo[0] < foo[1]
assert foo[1] == foo[2]
;)

;; Concatenation

val foobarb = foo # barb
val barbfoo = barb # foo

assert foobarb == "foobarb"
assert barbfoo == "barbfoo"

(; TODO
assert #foobarb == 7
assert #barbfoo == 7
assert foobarb[0] == "f"[0]
assert foobarb[6] == "b"[0]
assert barbfoo[0] == "b"[0]
assert barbfoo[6] == "o"[0]
;)


;; Comparison

assert empty == empty
assert foo == foo
assert empty == ""
assert foo == "foo"
assert barb == "barb"

assert empty <> foo
assert foo <> foobarb

assert ~ (empty <> empty)
assert ~ (foo <> foo)
assert ~ (empty <> "")
assert ~ (foo <> "foo")
assert ~ (barb <> "barb")
assert ~ (foobarb <> "foobarb")
assert ~ (barbfoo <> "barbfoo")
